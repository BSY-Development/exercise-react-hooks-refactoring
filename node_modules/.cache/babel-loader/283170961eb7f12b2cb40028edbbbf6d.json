{"ast":null,"code":"var _jsxFileName = \"/home/bruno/Trybe Exercises/exercises/bloco_18/dia_2/exercise-react-hooks-refactoring/src/TicTacToe.js\";\nimport React, { useState } from 'react';\nimport GameBoard from './GameBoard';\n\nfunction TicTacToe() {\n  const [activePlayer, setActivePlayer] = useState(1);\n  const [gameBoard, setGameBoard] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\n  const victoryArchivedInLine = gameBoard => {\n    for (let i = 0; i <= 6; i += 3) {\n      if (gameBoard[i] === gameBoard[i + 1] && gameBoard[i + 1] === gameBoard[i + 2] && gameBoard[i] !== 0) return gameBoard[i];\n    }\n\n    return false;\n  };\n\n  const victoryArchivedInColumn = gameBoard => {\n    for (let i = 0; i <= 2; i += 1) {\n      if (gameBoard[i] === gameBoard[i + 3] && gameBoard[i + 3] === gameBoard[i + 6] && gameBoard[i] !== 0) return gameBoard[i];\n    }\n\n    return false;\n  };\n\n  const victoryArchivedInDiagonals = gameBoard => {\n    if (gameBoard[4] === 0) return false;\n\n    if (gameBoard[0] === gameBoard[4] && gameBoard[4] === gameBoard[8]) {\n      return gameBoard[0];\n    }\n\n    if (gameBoard[2] === gameBoard[4] && gameBoard[4] === gameBoard[6]) {\n      return gameBoard[2];\n    }\n\n    return false;\n  };\n\n  const resetGame = () => {\n    setActivePlayer(1);\n    setGameBoard([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n  };\n\n  const toggleActivePlayer = () => {\n    if (activePlayer === 1) return 2;\n    return 1;\n  };\n\n  const updateState = cellClicked => {\n    const newState = [...gameBoard];\n    let newActivePlayer = activePlayer;\n\n    if (gameBoard[cellClicked] === 0) {\n      newState[cellClicked] = activePlayer;\n      newActivePlayer = toggleActivePlayer();\n    } else {\n      newState[cellClicked] = gameBoard[cellClicked];\n    }\n\n    setActivePlayer(newActivePlayer);\n    setGameBoard(newState);\n  };\n\n  const victoryArchieved = () => {\n    return victoryArchivedInLine(gameBoard) || victoryArchivedInColumn(gameBoard) || victoryArchivedInDiagonals(gameBoard);\n  };\n\n  const renderButton = () => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: resetGame,\n      \"data-testid\": \"restart-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, \"Recome\\xE7ar Jogo\");\n  };\n\n  const win = victoryArchieved();\n\n  if (!gameBoard.includes(0) && !win) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, renderButton(), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, \"Empate\"));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, renderButton(), !win ? /*#__PURE__*/React.createElement(GameBoard, {\n    gameState: gameBoard,\n    updateGame: updateState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, `Player ${win === 2 ? 'O' : 'X'} Ganhou`));\n}\n\nexport default TicTacToe;","map":{"version":3,"sources":["/home/bruno/Trybe Exercises/exercises/bloco_18/dia_2/exercise-react-hooks-refactoring/src/TicTacToe.js"],"names":["React","useState","GameBoard","TicTacToe","activePlayer","setActivePlayer","gameBoard","setGameBoard","victoryArchivedInLine","i","victoryArchivedInColumn","victoryArchivedInDiagonals","resetGame","toggleActivePlayer","updateState","cellClicked","newState","newActivePlayer","victoryArchieved","renderButton","win","includes"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport GameBoard from './GameBoard';\n\nfunction TicTacToe() {\n  const [activePlayer, setActivePlayer] = useState(1);\n  const [gameBoard, setGameBoard] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0])\n\n  const victoryArchivedInLine = (gameBoard) => {\n    for (let i = 0; i <= 6; i += 3) {\n      if (\n        gameBoard[i] === gameBoard[i + 1]\n        && gameBoard[i + 1] === gameBoard[i + 2]\n        && gameBoard[i] !== 0\n      ) return gameBoard[i];\n    }\n    return false;\n  } \n\n  const victoryArchivedInColumn = (gameBoard) => {\n    for (let i = 0; i <= 2; i += 1) {\n      if (\n        gameBoard[i] === gameBoard[i + 3]\n        && gameBoard[i + 3] === gameBoard[i + 6]\n        && gameBoard[i] !== 0\n      ) return gameBoard[i];\n    }\n    return false;\n  }\n\n  const victoryArchivedInDiagonals = (gameBoard) => {\n    if (gameBoard[4] === 0) return false;\n    if (gameBoard[0] === gameBoard[4] && gameBoard[4] === gameBoard[8]) {\n      return gameBoard[0];\n    }\n    if (gameBoard[2] === gameBoard[4] && gameBoard[4] === gameBoard[6]) {\n      return gameBoard[2];\n    }\n    return false;\n  }\n\n  const resetGame = () => {\n    setActivePlayer(1);\n    setGameBoard([0, 0, 0, 0, 0, 0, 0, 0, 0])\n  }\n\n  const toggleActivePlayer = () => {\n    if (activePlayer === 1) return 2;\n    return 1;\n  }\n\n  const updateState = (cellClicked) => {\n    const newState = [...gameBoard];\n    let newActivePlayer = activePlayer;\n    if (gameBoard[cellClicked] === 0) {\n      newState[cellClicked] = activePlayer;\n      newActivePlayer = toggleActivePlayer();\n    } else {\n      newState[cellClicked] = gameBoard[cellClicked];\n    }\n    setActivePlayer(newActivePlayer);\n    setGameBoard(newState);\n  }\n\n  const victoryArchieved = () => {\n    return (\n      victoryArchivedInLine(gameBoard)\n      || victoryArchivedInColumn(gameBoard)\n      || victoryArchivedInDiagonals(gameBoard)\n    );\n  }\n\n  const renderButton = () => {\n    return (\n      <button\n        type=\"button\"\n        onClick={resetGame}\n        data-testid=\"restart-button\"\n      >\n        Recome√ßar Jogo\n      </button>\n    );\n  }\n\n  const win = victoryArchieved();\n  if (!gameBoard.includes(0) && !win) {\n    return (\n      <>\n        {renderButton()}\n        <h1>Empate</h1>\n      </>\n    );\n  }\n  return (\n    <>\n      {renderButton()}\n      {(!win)\n        ? (\n          <GameBoard\n            gameState={gameBoard}\n            updateGame={updateState}\n          />\n        )\n        : <h1>{`Player ${win === 2 ? 'O' : 'X'} Ganhou`}</h1>}\n    </>\n  );\n}\n\nexport default TicTacToe;\n"]},"metadata":{},"sourceType":"module"}